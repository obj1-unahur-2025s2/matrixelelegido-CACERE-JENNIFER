import matrix.*

describe "Testeamos a neo " {

  test "Neo es el elegido" {
    assert.that(neo.esElElegido())
    }
  test "vitalidad inicial de neo"{
    assert.equals(10, neo.vitalidad())
    }
 test "vitalidad de neo despues de un salto"
    { neo.saltar()
    assert.equals(5, neo.vitalidad())
    }

}
describe"testeamos a morfeo"{
 
  test "Morfeo no es el elegido" {
    assert.notThat(morfeo.esElElegido())
    }
  test "vitalidad inicial de morfeo"{
    assert.equals(8,morfeo.vitalidad())
    }
 test "vitaldiad de morfeo despues de un salto"
    { morfeo.saltar()
    assert.equals(100, morfeo.vitalidad())
    }

}
describe"testeamos trinity"{
    test "trinity no es el elegido" {
    assert.notThat(trinity.esElElegido())
    }
  test "vitalidad inicial de trinity"{
    assert.equals(0, trinity.vitalidad())
    }
 test "vitalidad de neo despues de un salto"
    { trinity.saltar()
      trinity.saltar()
    assert.equals(0, trinity.vitalidad())
    }

}
describe"testeamos la nave"{
   test"cantidad de pasajeros inicial en la nave"{
    assert.equals(3, nave.cantidadDePasajeros())
   }
   test"pasajero de mayor vitalidad al inicio"
   {assert.equals(neo, nave.pasajeroConMayorVitalidad())}
}